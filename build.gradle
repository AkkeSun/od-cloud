plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.epages.restdocs-api-spec' version '0.19.0'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // swagger
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // springboot 3 jwt
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    implementation "javax.xml.bind:jaxb-api:2.3.0"

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
    main {
        resources {
            srcDirs "src/main/deployment/${profile}"
        }
    }
}

test {
    useJUnitPlatform()
}


swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

// ./gradlew :product:openapi3 :product:copyOasToSwagger
openapi3 {
    servers = [
            { url = "https://cloud.odlab.kr" }
    ]
    title = "Cloud API"
    description = "OD Cloud API 입니다."
    version = "0.0.1"
    format = "yaml"
    outputDirectory = "src/main/resources/static/docs"
}

tasks.register('copyOasToSwagger', DefaultTask) {
    doLast {
        def openapi3File = file("src/main/resources/static/docs/product-api.yaml")
        def securitySchemesContent = "  securitySchemes:\n" +                                                        \
                                                                                            "    APIKey:\n" +                                                        \
                                                                                            "      type: apiKey\n" +                                                        \
                                                                                            "      name: Authorization\n" +                                                        \
                                                                                            "      in: header\n" +                                                       \
                                                                                            "security:\n" +
                "  - APIKey: []"

        if (openapi3File.exists()) {
            def existingContent = openapi3File.text
            def updatedContent = existingContent + "\n" + securitySchemesContent
            openapi3File.text = updatedContent
            println "Added JWT authentication to ${openapi3File.path}"
        } else {
            println "Warning: openapi3.yaml not found at ${openapi3File.path}"
        }
    }
}

bootJar {
    archiveFileName = "product.jar"
}

jar {
    enabled = false
}


